//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.ServiceModel;
using System.Threading.Tasks;
using System.Xml.Schema;
using System.Xml.Serialization;

// ReSharper disable InconsistentNaming

namespace Unicom.Platform.Model.Service_References.UnicomPlatform
{
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [ServiceContract(Namespace = "http://resource.ems.ks/", ConfigurationName = "UnicomPlatform.PushResourceService")]
    public interface IPushResourceService
    {
        // CODEGEN: Parameter 'pullProjectCategoryFlag' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [OperationContract(Action = "", ReplyAction = "*")]
        [XmlSerializerFormat(SupportFaults = true)]
        [ServiceKnownType(typeof(pullDistrict))]
        [ServiceKnownType(typeof(registerVendorResponse))]
        [ServiceKnownType(typeof(registerVendor))]
        [ServiceKnownType(typeof(pushProjectStatusResponse))]
        [ServiceKnownType(typeof(pushProjectStatus))]
        [ServiceKnownType(typeof(pushProjectsResponse))]
        [ServiceKnownType(typeof(pushProjects))]
        [ServiceKnownType(typeof(pullRegion))]
        [ServiceKnownType(typeof(pushDeviceStatusResponse))]
        [ServiceKnownType(typeof(pushDeviceStatus))]
        [ServiceKnownType(typeof(pushRealTimeDataResponse))]
        [ServiceKnownType(typeof(pushRealTimeData))]
        [ServiceKnownType(typeof(pushDailyDataResponse))]
        [ServiceKnownType(typeof(pushDailyData))]
        [ServiceKnownType(typeof(pushHourlyDataResponse))]
        [ServiceKnownType(typeof(pushHourlyData))]
        [ServiceKnownType(typeof(pushDevicesResponse))]
        [ServiceKnownType(typeof(pushDevices))]
        [ServiceKnownType(typeof(pullProjectPeriod))]
        [ServiceKnownType(typeof(pullProjectType))]
        [ServiceKnownType(typeof(pullProjectCategory))]
        [return: MessageParameter(Name = "pullProjectCategoryFlag")]
        pullProjectCategoryResponse pullProjectCategory(pullProjectCategory1 request);

        [OperationContract(Action = "", ReplyAction = "*")]
        Task<pullProjectCategoryResponse> pullProjectCategoryAsync(pullProjectCategory1 request);

        // CODEGEN: Parameter 'pullProjectTypeFlag' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [OperationContract(Action = "", ReplyAction = "*")]
        [XmlSerializerFormat(SupportFaults = true)]
        [ServiceKnownType(typeof(pullDistrict))]
        [ServiceKnownType(typeof(registerVendorResponse))]
        [ServiceKnownType(typeof(registerVendor))]
        [ServiceKnownType(typeof(pushProjectStatusResponse))]
        [ServiceKnownType(typeof(pushProjectStatus))]
        [ServiceKnownType(typeof(pushProjectsResponse))]
        [ServiceKnownType(typeof(pushProjects))]
        [ServiceKnownType(typeof(pullRegion))]
        [ServiceKnownType(typeof(pushDeviceStatusResponse))]
        [ServiceKnownType(typeof(pushDeviceStatus))]
        [ServiceKnownType(typeof(pushRealTimeDataResponse))]
        [ServiceKnownType(typeof(pushRealTimeData))]
        [ServiceKnownType(typeof(pushDailyDataResponse))]
        [ServiceKnownType(typeof(pushDailyData))]
        [ServiceKnownType(typeof(pushHourlyDataResponse))]
        [ServiceKnownType(typeof(pushHourlyData))]
        [ServiceKnownType(typeof(pushDevicesResponse))]
        [ServiceKnownType(typeof(pushDevices))]
        [ServiceKnownType(typeof(pullProjectPeriod))]
        [ServiceKnownType(typeof(pullProjectType))]
        [ServiceKnownType(typeof(pullProjectCategory))]
        [return: MessageParameter(Name = "pullProjectTypeFlag")]
        pullProjectTypeResponse pullProjectType(pullProjectType1 request);

        [OperationContract(Action = "", ReplyAction = "*")]
        Task<pullProjectTypeResponse> pullProjectTypeAsync(pullProjectType1 request);

        // CODEGEN: Parameter 'pullProjectPeriodFlag' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [OperationContract(Action = "", ReplyAction = "*")]
        [XmlSerializerFormat(SupportFaults = true)]
        [ServiceKnownType(typeof(pullDistrict))]
        [ServiceKnownType(typeof(registerVendorResponse))]
        [ServiceKnownType(typeof(registerVendor))]
        [ServiceKnownType(typeof(pushProjectStatusResponse))]
        [ServiceKnownType(typeof(pushProjectStatus))]
        [ServiceKnownType(typeof(pushProjectsResponse))]
        [ServiceKnownType(typeof(pushProjects))]
        [ServiceKnownType(typeof(pullRegion))]
        [ServiceKnownType(typeof(pushDeviceStatusResponse))]
        [ServiceKnownType(typeof(pushDeviceStatus))]
        [ServiceKnownType(typeof(pushRealTimeDataResponse))]
        [ServiceKnownType(typeof(pushRealTimeData))]
        [ServiceKnownType(typeof(pushDailyDataResponse))]
        [ServiceKnownType(typeof(pushDailyData))]
        [ServiceKnownType(typeof(pushHourlyDataResponse))]
        [ServiceKnownType(typeof(pushHourlyData))]
        [ServiceKnownType(typeof(pushDevicesResponse))]
        [ServiceKnownType(typeof(pushDevices))]
        [ServiceKnownType(typeof(pullProjectPeriod))]
        [ServiceKnownType(typeof(pullProjectType))]
        [ServiceKnownType(typeof(pullProjectCategory))]
        [return: MessageParameter(Name = "pullProjectPeriodFlag")]
        pullProjectPeriodResponse pullProjectPeriod(pullProjectPeriod1 request);

        [OperationContract(Action = "", ReplyAction = "*")]
        Task<pullProjectPeriodResponse> pullProjectPeriodAsync(pullProjectPeriod1 request);

        // CODEGEN: Parameter 'deviceCodes' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [OperationContract(Action = "", ReplyAction = "*")]
        [XmlSerializerFormat(SupportFaults = true)]
        [ServiceKnownType(typeof(pullDistrict))]
        [ServiceKnownType(typeof(registerVendorResponse))]
        [ServiceKnownType(typeof(registerVendor))]
        [ServiceKnownType(typeof(pushProjectStatusResponse))]
        [ServiceKnownType(typeof(pushProjectStatus))]
        [ServiceKnownType(typeof(pushProjectsResponse))]
        [ServiceKnownType(typeof(pushProjects))]
        [ServiceKnownType(typeof(pullRegion))]
        [ServiceKnownType(typeof(pushDeviceStatusResponse))]
        [ServiceKnownType(typeof(pushDeviceStatus))]
        [ServiceKnownType(typeof(pushRealTimeDataResponse))]
        [ServiceKnownType(typeof(pushRealTimeData))]
        [ServiceKnownType(typeof(pushDailyDataResponse))]
        [ServiceKnownType(typeof(pushDailyData))]
        [ServiceKnownType(typeof(pushHourlyDataResponse))]
        [ServiceKnownType(typeof(pushHourlyData))]
        [ServiceKnownType(typeof(pushDevicesResponse))]
        [ServiceKnownType(typeof(pushDevices))]
        [ServiceKnownType(typeof(pullProjectPeriod))]
        [ServiceKnownType(typeof(pullProjectType))]
        [ServiceKnownType(typeof(pullProjectCategory))]
        [return: MessageParameter(Name = "deviceCodes")]
        pushDevicesResponse1 pushDevices(pushDevices1 request);

        [OperationContract(Action = "", ReplyAction = "*")]
        Task<pushDevicesResponse1> pushDevicesAsync(pushDevices1 request);

        // CODEGEN: Parameter 'pushHourlyDataFlag' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [OperationContract(Action = "", ReplyAction = "*")]
        [XmlSerializerFormat(SupportFaults = true)]
        [ServiceKnownType(typeof(pullDistrict))]
        [ServiceKnownType(typeof(registerVendorResponse))]
        [ServiceKnownType(typeof(registerVendor))]
        [ServiceKnownType(typeof(pushProjectStatusResponse))]
        [ServiceKnownType(typeof(pushProjectStatus))]
        [ServiceKnownType(typeof(pushProjectsResponse))]
        [ServiceKnownType(typeof(pushProjects))]
        [ServiceKnownType(typeof(pullRegion))]
        [ServiceKnownType(typeof(pushDeviceStatusResponse))]
        [ServiceKnownType(typeof(pushDeviceStatus))]
        [ServiceKnownType(typeof(pushRealTimeDataResponse))]
        [ServiceKnownType(typeof(pushRealTimeData))]
        [ServiceKnownType(typeof(pushDailyDataResponse))]
        [ServiceKnownType(typeof(pushDailyData))]
        [ServiceKnownType(typeof(pushHourlyDataResponse))]
        [ServiceKnownType(typeof(pushHourlyData))]
        [ServiceKnownType(typeof(pushDevicesResponse))]
        [ServiceKnownType(typeof(pushDevices))]
        [ServiceKnownType(typeof(pullProjectPeriod))]
        [ServiceKnownType(typeof(pullProjectType))]
        [ServiceKnownType(typeof(pullProjectCategory))]
        [return: MessageParameter(Name = "pushHourlyDataFlag")]
        pushHourlyDataResponse1 pushHourlyData(pushHourlyData1 request);

        [OperationContract(Action = "", ReplyAction = "*")]
        Task<pushHourlyDataResponse1> pushHourlyDataAsync(pushHourlyData1 request);

        // CODEGEN: Parameter 'pushDailyDataFlag' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [OperationContract(Action = "", ReplyAction = "*")]
        [XmlSerializerFormat(SupportFaults = true)]
        [ServiceKnownType(typeof(pullDistrict))]
        [ServiceKnownType(typeof(registerVendorResponse))]
        [ServiceKnownType(typeof(registerVendor))]
        [ServiceKnownType(typeof(pushProjectStatusResponse))]
        [ServiceKnownType(typeof(pushProjectStatus))]
        [ServiceKnownType(typeof(pushProjectsResponse))]
        [ServiceKnownType(typeof(pushProjects))]
        [ServiceKnownType(typeof(pullRegion))]
        [ServiceKnownType(typeof(pushDeviceStatusResponse))]
        [ServiceKnownType(typeof(pushDeviceStatus))]
        [ServiceKnownType(typeof(pushRealTimeDataResponse))]
        [ServiceKnownType(typeof(pushRealTimeData))]
        [ServiceKnownType(typeof(pushDailyDataResponse))]
        [ServiceKnownType(typeof(pushDailyData))]
        [ServiceKnownType(typeof(pushHourlyDataResponse))]
        [ServiceKnownType(typeof(pushHourlyData))]
        [ServiceKnownType(typeof(pushDevicesResponse))]
        [ServiceKnownType(typeof(pushDevices))]
        [ServiceKnownType(typeof(pullProjectPeriod))]
        [ServiceKnownType(typeof(pullProjectType))]
        [ServiceKnownType(typeof(pullProjectCategory))]
        [return: MessageParameter(Name = "pushDailyDataFlag")]
        pushDailyDataResponse1 pushDailyData(pushDailyData1 request);

        [OperationContract(Action = "", ReplyAction = "*")]
        Task<pushDailyDataResponse1> pushDailyDataAsync(pushDailyData1 request);

        // CODEGEN: Parameter 'pushRealTimeDataFlag' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [OperationContract(Action = "", ReplyAction = "*")]
        [XmlSerializerFormat(SupportFaults = true)]
        [ServiceKnownType(typeof(pullDistrict))]
        [ServiceKnownType(typeof(registerVendorResponse))]
        [ServiceKnownType(typeof(registerVendor))]
        [ServiceKnownType(typeof(pushProjectStatusResponse))]
        [ServiceKnownType(typeof(pushProjectStatus))]
        [ServiceKnownType(typeof(pushProjectsResponse))]
        [ServiceKnownType(typeof(pushProjects))]
        [ServiceKnownType(typeof(pullRegion))]
        [ServiceKnownType(typeof(pushDeviceStatusResponse))]
        [ServiceKnownType(typeof(pushDeviceStatus))]
        [ServiceKnownType(typeof(pushRealTimeDataResponse))]
        [ServiceKnownType(typeof(pushRealTimeData))]
        [ServiceKnownType(typeof(pushDailyDataResponse))]
        [ServiceKnownType(typeof(pushDailyData))]
        [ServiceKnownType(typeof(pushHourlyDataResponse))]
        [ServiceKnownType(typeof(pushHourlyData))]
        [ServiceKnownType(typeof(pushDevicesResponse))]
        [ServiceKnownType(typeof(pushDevices))]
        [ServiceKnownType(typeof(pullProjectPeriod))]
        [ServiceKnownType(typeof(pullProjectType))]
        [ServiceKnownType(typeof(pullProjectCategory))]
        [return: MessageParameter(Name = "pushRealTimeDataFlag")]
        pushRealTimeDataResponse1 pushRealTimeData(pushRealTimeData1 request);

        [OperationContract(Action = "", ReplyAction = "*")]
        Task<pushRealTimeDataResponse1> pushRealTimeDataAsync(pushRealTimeData1 request);

        // CODEGEN: Parameter 'deviceStatusCodes' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [OperationContract(Action = "", ReplyAction = "*")]
        [XmlSerializerFormat(SupportFaults = true)]
        [ServiceKnownType(typeof(pullDistrict))]
        [ServiceKnownType(typeof(registerVendorResponse))]
        [ServiceKnownType(typeof(registerVendor))]
        [ServiceKnownType(typeof(pushProjectStatusResponse))]
        [ServiceKnownType(typeof(pushProjectStatus))]
        [ServiceKnownType(typeof(pushProjectsResponse))]
        [ServiceKnownType(typeof(pushProjects))]
        [ServiceKnownType(typeof(pullRegion))]
        [ServiceKnownType(typeof(pushDeviceStatusResponse))]
        [ServiceKnownType(typeof(pushDeviceStatus))]
        [ServiceKnownType(typeof(pushRealTimeDataResponse))]
        [ServiceKnownType(typeof(pushRealTimeData))]
        [ServiceKnownType(typeof(pushDailyDataResponse))]
        [ServiceKnownType(typeof(pushDailyData))]
        [ServiceKnownType(typeof(pushHourlyDataResponse))]
        [ServiceKnownType(typeof(pushHourlyData))]
        [ServiceKnownType(typeof(pushDevicesResponse))]
        [ServiceKnownType(typeof(pushDevices))]
        [ServiceKnownType(typeof(pullProjectPeriod))]
        [ServiceKnownType(typeof(pullProjectType))]
        [ServiceKnownType(typeof(pullProjectCategory))]
        [return: MessageParameter(Name = "deviceStatusCodes")]
        pushDeviceStatusResponse1 pushDeviceStatus(pushDeviceStatus1 request);

        [OperationContract(Action = "", ReplyAction = "*")]
        Task<pushDeviceStatusResponse1> pushDeviceStatusAsync(pushDeviceStatus1 request);

        // CODEGEN: Parameter 'pullRegionFlag' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [OperationContract(Action = "", ReplyAction = "*")]
        [XmlSerializerFormat(SupportFaults = true)]
        [ServiceKnownType(typeof(pullDistrict))]
        [ServiceKnownType(typeof(registerVendorResponse))]
        [ServiceKnownType(typeof(registerVendor))]
        [ServiceKnownType(typeof(pushProjectStatusResponse))]
        [ServiceKnownType(typeof(pushProjectStatus))]
        [ServiceKnownType(typeof(pushProjectsResponse))]
        [ServiceKnownType(typeof(pushProjects))]
        [ServiceKnownType(typeof(pullRegion))]
        [ServiceKnownType(typeof(pushDeviceStatusResponse))]
        [ServiceKnownType(typeof(pushDeviceStatus))]
        [ServiceKnownType(typeof(pushRealTimeDataResponse))]
        [ServiceKnownType(typeof(pushRealTimeData))]
        [ServiceKnownType(typeof(pushDailyDataResponse))]
        [ServiceKnownType(typeof(pushDailyData))]
        [ServiceKnownType(typeof(pushHourlyDataResponse))]
        [ServiceKnownType(typeof(pushHourlyData))]
        [ServiceKnownType(typeof(pushDevicesResponse))]
        [ServiceKnownType(typeof(pushDevices))]
        [ServiceKnownType(typeof(pullProjectPeriod))]
        [ServiceKnownType(typeof(pullProjectType))]
        [ServiceKnownType(typeof(pullProjectCategory))]
        [return: MessageParameter(Name = "pullRegionFlag")]
        pullRegionResponse pullRegion(pullRegion1 request);

        [OperationContract(Action = "", ReplyAction = "*")]
        Task<pullRegionResponse> pullRegionAsync(pullRegion1 request);

        // CODEGEN: Parameter 'projectCodes' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [OperationContract(Action = "", ReplyAction = "*")]
        [XmlSerializerFormat(SupportFaults = true)]
        [ServiceKnownType(typeof(pullDistrict))]
        [ServiceKnownType(typeof(registerVendorResponse))]
        [ServiceKnownType(typeof(registerVendor))]
        [ServiceKnownType(typeof(pushProjectStatusResponse))]
        [ServiceKnownType(typeof(pushProjectStatus))]
        [ServiceKnownType(typeof(pushProjectsResponse))]
        [ServiceKnownType(typeof(pushProjects))]
        [ServiceKnownType(typeof(pullRegion))]
        [ServiceKnownType(typeof(pushDeviceStatusResponse))]
        [ServiceKnownType(typeof(pushDeviceStatus))]
        [ServiceKnownType(typeof(pushRealTimeDataResponse))]
        [ServiceKnownType(typeof(pushRealTimeData))]
        [ServiceKnownType(typeof(pushDailyDataResponse))]
        [ServiceKnownType(typeof(pushDailyData))]
        [ServiceKnownType(typeof(pushHourlyDataResponse))]
        [ServiceKnownType(typeof(pushHourlyData))]
        [ServiceKnownType(typeof(pushDevicesResponse))]
        [ServiceKnownType(typeof(pushDevices))]
        [ServiceKnownType(typeof(pullProjectPeriod))]
        [ServiceKnownType(typeof(pullProjectType))]
        [ServiceKnownType(typeof(pullProjectCategory))]
        [return: MessageParameter(Name = "projectCodes")]
        pushProjectsResponse1 pushProjects(pushProjects1 request);

        [OperationContract(Action = "", ReplyAction = "*")]
        Task<pushProjectsResponse1> pushProjectsAsync(pushProjects1 request);

        // CODEGEN: Parameter 'projectStatusCodes' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [OperationContract(Action = "", ReplyAction = "*")]
        [XmlSerializerFormat(SupportFaults = true)]
        [ServiceKnownType(typeof(pullDistrict))]
        [ServiceKnownType(typeof(registerVendorResponse))]
        [ServiceKnownType(typeof(registerVendor))]
        [ServiceKnownType(typeof(pushProjectStatusResponse))]
        [ServiceKnownType(typeof(pushProjectStatus))]
        [ServiceKnownType(typeof(pushProjectsResponse))]
        [ServiceKnownType(typeof(pushProjects))]
        [ServiceKnownType(typeof(pullRegion))]
        [ServiceKnownType(typeof(pushDeviceStatusResponse))]
        [ServiceKnownType(typeof(pushDeviceStatus))]
        [ServiceKnownType(typeof(pushRealTimeDataResponse))]
        [ServiceKnownType(typeof(pushRealTimeData))]
        [ServiceKnownType(typeof(pushDailyDataResponse))]
        [ServiceKnownType(typeof(pushDailyData))]
        [ServiceKnownType(typeof(pushHourlyDataResponse))]
        [ServiceKnownType(typeof(pushHourlyData))]
        [ServiceKnownType(typeof(pushDevicesResponse))]
        [ServiceKnownType(typeof(pushDevices))]
        [ServiceKnownType(typeof(pullProjectPeriod))]
        [ServiceKnownType(typeof(pullProjectType))]
        [ServiceKnownType(typeof(pullProjectCategory))]
        [return: MessageParameter(Name = "projectStatusCodes")]
        pushProjectStatusResponse1 pushProjectStatus(pushProjectStatus1 request);

        [OperationContract(Action = "", ReplyAction = "*")]
        Task<pushProjectStatusResponse1> pushProjectStatusAsync(pushProjectStatus1 request);

        // CODEGEN: Parameter 'vendorCode' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [OperationContract(Action = "", ReplyAction = "*")]
        [XmlSerializerFormat(SupportFaults = true)]
        [ServiceKnownType(typeof(pullDistrict))]
        [ServiceKnownType(typeof(registerVendorResponse))]
        [ServiceKnownType(typeof(registerVendor))]
        [ServiceKnownType(typeof(pushProjectStatusResponse))]
        [ServiceKnownType(typeof(pushProjectStatus))]
        [ServiceKnownType(typeof(pushProjectsResponse))]
        [ServiceKnownType(typeof(pushProjects))]
        [ServiceKnownType(typeof(pullRegion))]
        [ServiceKnownType(typeof(pushDeviceStatusResponse))]
        [ServiceKnownType(typeof(pushDeviceStatus))]
        [ServiceKnownType(typeof(pushRealTimeDataResponse))]
        [ServiceKnownType(typeof(pushRealTimeData))]
        [ServiceKnownType(typeof(pushDailyDataResponse))]
        [ServiceKnownType(typeof(pushDailyData))]
        [ServiceKnownType(typeof(pushHourlyDataResponse))]
        [ServiceKnownType(typeof(pushHourlyData))]
        [ServiceKnownType(typeof(pushDevicesResponse))]
        [ServiceKnownType(typeof(pushDevices))]
        [ServiceKnownType(typeof(pullProjectPeriod))]
        [ServiceKnownType(typeof(pullProjectType))]
        [ServiceKnownType(typeof(pullProjectCategory))]
        [return: MessageParameter(Name = "vendorCode")]
        registerVendorResponse1 registerVendor(registerVendor1 request);

        [OperationContract(Action = "", ReplyAction = "*")]
        Task<registerVendorResponse1> registerVendorAsync(registerVendor1 request);

        // CODEGEN: Parameter 'districts' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [OperationContract(Action = "", ReplyAction = "*")]
        [XmlSerializerFormat(SupportFaults = true)]
        [ServiceKnownType(typeof(pullDistrict))]
        [ServiceKnownType(typeof(registerVendorResponse))]
        [ServiceKnownType(typeof(registerVendor))]
        [ServiceKnownType(typeof(pushProjectStatusResponse))]
        [ServiceKnownType(typeof(pushProjectStatus))]
        [ServiceKnownType(typeof(pushProjectsResponse))]
        [ServiceKnownType(typeof(pushProjects))]
        [ServiceKnownType(typeof(pullRegion))]
        [ServiceKnownType(typeof(pushDeviceStatusResponse))]
        [ServiceKnownType(typeof(pushDeviceStatus))]
        [ServiceKnownType(typeof(pushRealTimeDataResponse))]
        [ServiceKnownType(typeof(pushRealTimeData))]
        [ServiceKnownType(typeof(pushDailyDataResponse))]
        [ServiceKnownType(typeof(pushDailyData))]
        [ServiceKnownType(typeof(pushHourlyDataResponse))]
        [ServiceKnownType(typeof(pushHourlyData))]
        [ServiceKnownType(typeof(pushDevicesResponse))]
        [ServiceKnownType(typeof(pushDevices))]
        [ServiceKnownType(typeof(pullProjectPeriod))]
        [ServiceKnownType(typeof(pullProjectType))]
        [ServiceKnownType(typeof(pullProjectCategory))]
        [return: MessageParameter(Name = "districts")]
        pullDistrictResponse pullDistrict(pullDistrict1 request);

        [OperationContract(Action = "", ReplyAction = "*")]
        Task<pullDistrictResponse> pullDistrictAsync(pullDistrict1 request);
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class emsPrjCategory : object, INotifyPropertyChanged
    {
        private int codeField;

        private bool codeFieldSpecified;

        private string nameField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public int code
        {
            get
            {
                return codeField;
            }
            set
            {
                codeField = value;
                RaisePropertyChanged("code");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool codeSpecified
        {
            get
            {
                return codeFieldSpecified;
            }
            set
            {
                codeFieldSpecified = value;
                RaisePropertyChanged("codeSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 1)]
        public string name
        {
            get
            {
                return nameField;
            }
            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class emsDistrict : object, INotifyPropertyChanged
    {
        private string codeField;

        private string nameField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string code
        {
            get
            {
                return codeField;
            }
            set
            {
                codeField = value;
                RaisePropertyChanged("code");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 1)]
        public string name
        {
            get
            {
                return nameField;
            }
            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pullDistrict : object, INotifyPropertyChanged
    {
        private string vendorCodeField;

        private string parentDistrictField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string vendorCode
        {
            get
            {
                return vendorCodeField;
            }
            set
            {
                vendorCodeField = value;
                RaisePropertyChanged("vendorCode");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 1)]
        public string parentDistrict
        {
            get
            {
                return parentDistrictField;
            }
            set
            {
                parentDistrictField = value;
                RaisePropertyChanged("parentDistrict");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class registerVendorResponse : object, INotifyPropertyChanged
    {
        private string vendorCodeField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string vendorCode
        {
            get
            {
                return vendorCodeField;
            }
            set
            {
                vendorCodeField = value;
                RaisePropertyChanged("vendorCode");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class registerVendor : object, INotifyPropertyChanged
    {
        private string vendorNameField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string vendorName
        {
            get
            {
                return vendorNameField;
            }
            set
            {
                vendorNameField = value;
                RaisePropertyChanged("vendorName");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pushProjectStatusResponse : object, INotifyPropertyChanged
    {
        private resultData projectStatusCodesField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public resultData projectStatusCodes
        {
            get
            {
                return projectStatusCodesField;
            }
            set
            {
                projectStatusCodesField = value;
                RaisePropertyChanged("projectStatusCodes");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class resultData : object, INotifyPropertyChanged
    {
        private resultDataEntry[] resultField;

        /// <remarks/>
        [XmlArray(Form = XmlSchemaForm.Unqualified, Order = 0)]
        [XmlArrayItem("entry", Form = XmlSchemaForm.Unqualified, IsNullable = false)]
        public resultDataEntry[] result
        {
            get
            {
                return resultField;
            }
            set
            {
                resultField = value;
                RaisePropertyChanged("result");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true, Namespace = "http://resource.ems.ks/")]
    public class resultDataEntry : object, INotifyPropertyChanged
    {
        private object keyField;

        private object valueField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public object key
        {
            get
            {
                return keyField;
            }
            set
            {
                keyField = value;
                RaisePropertyChanged("key");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 1)]
        public object value
        {
            get
            {
                return valueField;
            }
            set
            {
                valueField = value;
                RaisePropertyChanged("value");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pushProjectStatus : object, INotifyPropertyChanged
    {
        private string vendorCodeField;

        private emsProject[] emsProjectListField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string vendorCode
        {
            get
            {
                return vendorCodeField;
            }
            set
            {
                vendorCodeField = value;
                RaisePropertyChanged("vendorCode");
            }
        }

        /// <remarks/>
        [XmlElement("emsProjectList", Form = XmlSchemaForm.Unqualified, Order = 1)]
        public emsProject[] emsProjectList
        {
            get
            {
                return emsProjectListField;
            }
            set
            {
                emsProjectListField = value;
                RaisePropertyChanged("emsProjectList");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class emsProject : object, INotifyPropertyChanged
    {
        private string codeField;

        private string nameField;

        private string districtField;

        private int prjTypeField;

        private bool prjTypeFieldSpecified;

        private int prjCategoryField;

        private bool prjCategoryFieldSpecified;

        private int prjPeriodField;

        private bool prjPeriodFieldSpecified;

        private int regionField;

        private bool regionFieldSpecified;

        private string streetField;

        private string longitudeField;

        private string latitudeField;

        private string contractorsField;

        private string superintendentField;

        private string telephoneField;

        private string addressField;

        private float siteAreaField;

        private bool siteAreaFieldSpecified;

        private float buildingAreaField;

        private bool buildingAreaFieldSpecified;

        private DateTime startDateField;

        private bool startDateFieldSpecified;

        private DateTime endDateField;

        private bool endDateFieldSpecified;

        private string stageField;

        private bool isCompletedField;

        private bool isCompletedFieldSpecified;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string code
        {
            get
            {
                return codeField;
            }
            set
            {
                codeField = value;
                RaisePropertyChanged("code");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 1)]
        public string name
        {
            get
            {
                return nameField;
            }
            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 2)]
        public string district
        {
            get
            {
                return districtField;
            }
            set
            {
                districtField = value;
                RaisePropertyChanged("district");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 3)]
        public int prjType
        {
            get
            {
                return prjTypeField;
            }
            set
            {
                prjTypeField = value;
                RaisePropertyChanged("prjType");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool prjTypeSpecified
        {
            get
            {
                return prjTypeFieldSpecified;
            }
            set
            {
                prjTypeFieldSpecified = value;
                RaisePropertyChanged("prjTypeSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 4)]
        public int prjCategory
        {
            get
            {
                return prjCategoryField;
            }
            set
            {
                prjCategoryField = value;
                RaisePropertyChanged("prjCategory");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool prjCategorySpecified
        {
            get
            {
                return prjCategoryFieldSpecified;
            }
            set
            {
                prjCategoryFieldSpecified = value;
                RaisePropertyChanged("prjCategorySpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 5)]
        public int prjPeriod
        {
            get
            {
                return prjPeriodField;
            }
            set
            {
                prjPeriodField = value;
                RaisePropertyChanged("prjPeriod");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool prjPeriodSpecified
        {
            get
            {
                return prjPeriodFieldSpecified;
            }
            set
            {
                prjPeriodFieldSpecified = value;
                RaisePropertyChanged("prjPeriodSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 6)]
        public int region
        {
            get
            {
                return regionField;
            }
            set
            {
                regionField = value;
                RaisePropertyChanged("region");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool regionSpecified
        {
            get
            {
                return regionFieldSpecified;
            }
            set
            {
                regionFieldSpecified = value;
                RaisePropertyChanged("regionSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 7)]
        public string street
        {
            get
            {
                return streetField;
            }
            set
            {
                streetField = value;
                RaisePropertyChanged("street");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 8)]
        public string longitude
        {
            get
            {
                return longitudeField;
            }
            set
            {
                longitudeField = value;
                RaisePropertyChanged("longitude");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 9)]
        public string latitude
        {
            get
            {
                return latitudeField;
            }
            set
            {
                latitudeField = value;
                RaisePropertyChanged("latitude");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 10)]
        public string contractors
        {
            get
            {
                return contractorsField;
            }
            set
            {
                contractorsField = value;
                RaisePropertyChanged("contractors");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 11)]
        public string superintendent
        {
            get
            {
                return superintendentField;
            }
            set
            {
                superintendentField = value;
                RaisePropertyChanged("superintendent");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 12)]
        public string telephone
        {
            get
            {
                return telephoneField;
            }
            set
            {
                telephoneField = value;
                RaisePropertyChanged("telephone");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 13)]
        public string address
        {
            get
            {
                return addressField;
            }
            set
            {
                addressField = value;
                RaisePropertyChanged("address");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 14)]
        public float siteArea
        {
            get
            {
                return siteAreaField;
            }
            set
            {
                siteAreaField = value;
                RaisePropertyChanged("siteArea");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool siteAreaSpecified
        {
            get
            {
                return siteAreaFieldSpecified;
            }
            set
            {
                siteAreaFieldSpecified = value;
                RaisePropertyChanged("siteAreaSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 15)]
        public float buildingArea
        {
            get
            {
                return buildingAreaField;
            }
            set
            {
                buildingAreaField = value;
                RaisePropertyChanged("buildingArea");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool buildingAreaSpecified
        {
            get
            {
                return buildingAreaFieldSpecified;
            }
            set
            {
                buildingAreaFieldSpecified = value;
                RaisePropertyChanged("buildingAreaSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 16)]
        public DateTime startDate
        {
            get
            {
                return startDateField;
            }
            set
            {
                startDateField = value;
                RaisePropertyChanged("startDate");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool startDateSpecified
        {
            get
            {
                return startDateFieldSpecified;
            }
            set
            {
                startDateFieldSpecified = value;
                RaisePropertyChanged("startDateSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 17)]
        public DateTime endDate
        {
            get
            {
                return endDateField;
            }
            set
            {
                endDateField = value;
                RaisePropertyChanged("endDate");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool endDateSpecified
        {
            get
            {
                return endDateFieldSpecified;
            }
            set
            {
                endDateFieldSpecified = value;
                RaisePropertyChanged("endDateSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 18)]
        public string stage
        {
            get
            {
                return stageField;
            }
            set
            {
                stageField = value;
                RaisePropertyChanged("stage");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 19)]
        public bool isCompleted
        {
            get
            {
                return isCompletedField;
            }
            set
            {
                isCompletedField = value;
                RaisePropertyChanged("isCompleted");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool isCompletedSpecified
        {
            get
            {
                return isCompletedFieldSpecified;
            }
            set
            {
                isCompletedFieldSpecified = value;
                RaisePropertyChanged("isCompletedSpecified");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pushProjectsResponse : object, INotifyPropertyChanged
    {
        private resultData projectCodesField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public resultData projectCodes
        {
            get
            {
                return projectCodesField;
            }
            set
            {
                projectCodesField = value;
                RaisePropertyChanged("projectCodes");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pushProjects : object, INotifyPropertyChanged
    {
        private string vendorCodeField;

        private emsProject[] emsProjectListField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string vendorCode
        {
            get
            {
                return vendorCodeField;
            }
            set
            {
                vendorCodeField = value;
                RaisePropertyChanged("vendorCode");
            }
        }

        /// <remarks/>
        [XmlElement("emsProjectList", Form = XmlSchemaForm.Unqualified, Order = 1)]
        public emsProject[] emsProjectList
        {
            get
            {
                return emsProjectListField;
            }
            set
            {
                emsProjectListField = value;
                RaisePropertyChanged("emsProjectList");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class emsRegion : object, INotifyPropertyChanged
    {
        private int codeField;

        private bool codeFieldSpecified;

        private string nameField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public int code
        {
            get
            {
                return codeField;
            }
            set
            {
                codeField = value;
                RaisePropertyChanged("code");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool codeSpecified
        {
            get
            {
                return codeFieldSpecified;
            }
            set
            {
                codeFieldSpecified = value;
                RaisePropertyChanged("codeSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 1)]
        public string name
        {
            get
            {
                return nameField;
            }
            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pullRegion : object, INotifyPropertyChanged
    {
        private string vendorCodeField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string vendorCode
        {
            get
            {
                return vendorCodeField;
            }
            set
            {
                vendorCodeField = value;
                RaisePropertyChanged("vendorCode");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pushDeviceStatusResponse : object, INotifyPropertyChanged
    {
        private resultData deviceStatusCodesField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public resultData deviceStatusCodes
        {
            get
            {
                return deviceStatusCodesField;
            }
            set
            {
                deviceStatusCodesField = value;
                RaisePropertyChanged("deviceStatusCodes");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pushDeviceStatus : object, INotifyPropertyChanged
    {
        private string vendorCodeField;

        private emsDevice[] emsDeviceListField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string vendorCode
        {
            get
            {
                return vendorCodeField;
            }
            set
            {
                vendorCodeField = value;
                RaisePropertyChanged("vendorCode");
            }
        }

        /// <remarks/>
        [XmlElement("emsDeviceList", Form = XmlSchemaForm.Unqualified, Order = 1)]
        public emsDevice[] emsDeviceList
        {
            get
            {
                return emsDeviceListField;
            }
            set
            {
                emsDeviceListField = value;
                RaisePropertyChanged("emsDeviceList");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class emsDevice : object, INotifyPropertyChanged
    {
        private string codeField;

        private string nameField;

        private string ipAddrField;

        private string macAddrField;

        private string portField;

        private string versionField;

        private string projectCodeField;

        private string longitudeField;

        private string latitudeField;

        private DateTime startDateField;

        private bool startDateFieldSpecified;

        private DateTime endDateField;

        private bool endDateFieldSpecified;

        private DateTime installDateField;

        private bool installDateFieldSpecified;

        private bool onlineStatusField;

        private bool onlineStatusFieldSpecified;

        private string videoUrlField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string code
        {
            get
            {
                return codeField;
            }
            set
            {
                codeField = value;
                RaisePropertyChanged("code");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 1)]
        public string name
        {
            get
            {
                return nameField;
            }
            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 2)]
        public string ipAddr
        {
            get
            {
                return ipAddrField;
            }
            set
            {
                ipAddrField = value;
                RaisePropertyChanged("ipAddr");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 3)]
        public string macAddr
        {
            get
            {
                return macAddrField;
            }
            set
            {
                macAddrField = value;
                RaisePropertyChanged("macAddr");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 4)]
        public string port
        {
            get
            {
                return portField;
            }
            set
            {
                portField = value;
                RaisePropertyChanged("port");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 5)]
        public string version
        {
            get
            {
                return versionField;
            }
            set
            {
                versionField = value;
                RaisePropertyChanged("version");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 6)]
        public string projectCode
        {
            get
            {
                return projectCodeField;
            }
            set
            {
                projectCodeField = value;
                RaisePropertyChanged("projectCode");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 7)]
        public string longitude
        {
            get
            {
                return longitudeField;
            }
            set
            {
                longitudeField = value;
                RaisePropertyChanged("longitude");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 8)]
        public string latitude
        {
            get
            {
                return latitudeField;
            }
            set
            {
                latitudeField = value;
                RaisePropertyChanged("latitude");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 9)]
        public DateTime startDate
        {
            get
            {
                return startDateField;
            }
            set
            {
                startDateField = value;
                RaisePropertyChanged("startDate");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool startDateSpecified
        {
            get
            {
                return startDateFieldSpecified;
            }
            set
            {
                startDateFieldSpecified = value;
                RaisePropertyChanged("startDateSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 10)]
        public DateTime endDate
        {
            get
            {
                return endDateField;
            }
            set
            {
                endDateField = value;
                RaisePropertyChanged("endDate");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool endDateSpecified
        {
            get
            {
                return endDateFieldSpecified;
            }
            set
            {
                endDateFieldSpecified = value;
                RaisePropertyChanged("endDateSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 11)]
        public DateTime installDate
        {
            get
            {
                return installDateField;
            }
            set
            {
                installDateField = value;
                RaisePropertyChanged("installDate");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool installDateSpecified
        {
            get
            {
                return installDateFieldSpecified;
            }
            set
            {
                installDateFieldSpecified = value;
                RaisePropertyChanged("installDateSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 12)]
        public bool onlineStatus
        {
            get
            {
                return onlineStatusField;
            }
            set
            {
                onlineStatusField = value;
                RaisePropertyChanged("onlineStatus");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool onlineStatusSpecified
        {
            get
            {
                return onlineStatusFieldSpecified;
            }
            set
            {
                onlineStatusFieldSpecified = value;
                RaisePropertyChanged("onlineStatusSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 13)]
        public string videoUrl
        {
            get
            {
                return videoUrlField;
            }
            set
            {
                videoUrlField = value;
                RaisePropertyChanged("videoUrl");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pushRealTimeDataResponse : object, INotifyPropertyChanged
    {
        private resultData pushRealTimeDataFlagField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public resultData pushRealTimeDataFlag
        {
            get
            {
                return pushRealTimeDataFlagField;
            }
            set
            {
                pushRealTimeDataFlagField = value;
                RaisePropertyChanged("pushRealTimeDataFlag");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pushRealTimeData : object, INotifyPropertyChanged
    {
        private string vendorCodeField;

        private emsData[] emsDataListField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string vendorCode
        {
            get
            {
                return vendorCodeField;
            }
            set
            {
                vendorCodeField = value;
                RaisePropertyChanged("vendorCode");
            }
        }

        /// <remarks/>
        [XmlElement("emsDataList", Form = XmlSchemaForm.Unqualified, Order = 1)]
        public emsData[] emsDataList
        {
            get
            {
                return emsDataListField;
            }
            set
            {
                emsDataListField = value;
                RaisePropertyChanged("emsDataList");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class emsData : object, INotifyPropertyChanged
    {
        private string devCodeField;

        private string prjCodeField;

        private int prjTypeField;

        private float dustField;

        private float maxDustField;

        private float minDustField;

        private float temperatureField;

        private float maxTemperatureField;

        private float minTemperatureField;

        private float humidityField;

        private float maxHumidityField;

        private float minHumidityField;

        private int noiseField;

        private int maxNoiseField;

        private int minNoiseField;

        private float pressureField;

        private float maxPressureField;

        private float minPressureField;

        private float rainfallField;

        private float maxRainfallField;

        private float minRainfallField;

        private float windSpeedField;

        private int windDirectionField;

        private long dateTimeField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string devCode
        {
            get
            {
                return devCodeField;
            }
            set
            {
                devCodeField = value;
                RaisePropertyChanged("devCode");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 1)]
        public string prjCode
        {
            get
            {
                return prjCodeField;
            }
            set
            {
                prjCodeField = value;
                RaisePropertyChanged("prjCode");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 2)]
        public int prjType
        {
            get
            {
                return prjTypeField;
            }
            set
            {
                prjTypeField = value;
                RaisePropertyChanged("prjType");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 3)]
        public float dust
        {
            get
            {
                return dustField;
            }
            set
            {
                dustField = value;
                RaisePropertyChanged("dust");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 4)]
        public float maxDust
        {
            get
            {
                return maxDustField;
            }
            set
            {
                maxDustField = value;
                RaisePropertyChanged("maxDust");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 5)]
        public float minDust
        {
            get
            {
                return minDustField;
            }
            set
            {
                minDustField = value;
                RaisePropertyChanged("minDust");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 6)]
        public float temperature
        {
            get
            {
                return temperatureField;
            }
            set
            {
                temperatureField = value;
                RaisePropertyChanged("temperature");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 7)]
        public float maxTemperature
        {
            get
            {
                return maxTemperatureField;
            }
            set
            {
                maxTemperatureField = value;
                RaisePropertyChanged("maxTemperature");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 8)]
        public float minTemperature
        {
            get
            {
                return minTemperatureField;
            }
            set
            {
                minTemperatureField = value;
                RaisePropertyChanged("minTemperature");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 9)]
        public float humidity
        {
            get
            {
                return humidityField;
            }
            set
            {
                humidityField = value;
                RaisePropertyChanged("humidity");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 10)]
        public float maxHumidity
        {
            get
            {
                return maxHumidityField;
            }
            set
            {
                maxHumidityField = value;
                RaisePropertyChanged("maxHumidity");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 11)]
        public float minHumidity
        {
            get
            {
                return minHumidityField;
            }
            set
            {
                minHumidityField = value;
                RaisePropertyChanged("minHumidity");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 12)]
        public int noise
        {
            get
            {
                return noiseField;
            }
            set
            {
                noiseField = value;
                RaisePropertyChanged("noise");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 13)]
        public int maxNoise
        {
            get
            {
                return maxNoiseField;
            }
            set
            {
                maxNoiseField = value;
                RaisePropertyChanged("maxNoise");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 14)]
        public int minNoise
        {
            get
            {
                return minNoiseField;
            }
            set
            {
                minNoiseField = value;
                RaisePropertyChanged("minNoise");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 15)]
        public float pressure
        {
            get
            {
                return pressureField;
            }
            set
            {
                pressureField = value;
                RaisePropertyChanged("pressure");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 16)]
        public float maxPressure
        {
            get
            {
                return maxPressureField;
            }
            set
            {
                maxPressureField = value;
                RaisePropertyChanged("maxPressure");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 17)]
        public float minPressure
        {
            get
            {
                return minPressureField;
            }
            set
            {
                minPressureField = value;
                RaisePropertyChanged("minPressure");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 18)]
        public float rainfall
        {
            get
            {
                return rainfallField;
            }
            set
            {
                rainfallField = value;
                RaisePropertyChanged("rainfall");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 19)]
        public float maxRainfall
        {
            get
            {
                return maxRainfallField;
            }
            set
            {
                maxRainfallField = value;
                RaisePropertyChanged("maxRainfall");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 20)]
        public float minRainfall
        {
            get
            {
                return minRainfallField;
            }
            set
            {
                minRainfallField = value;
                RaisePropertyChanged("minRainfall");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 21)]
        public float windSpeed
        {
            get
            {
                return windSpeedField;
            }
            set
            {
                windSpeedField = value;
                RaisePropertyChanged("windSpeed");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 22)]
        public int windDirection
        {
            get
            {
                return windDirectionField;
            }
            set
            {
                windDirectionField = value;
                RaisePropertyChanged("windDirection");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 23)]
        public long dateTime
        {
            get
            {
                return dateTimeField;
            }
            set
            {
                dateTimeField = value;
                RaisePropertyChanged("dateTime");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pushDailyDataResponse : object, INotifyPropertyChanged
    {
        private resultData pushDailyDataFlagField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public resultData pushDailyDataFlag
        {
            get
            {
                return pushDailyDataFlagField;
            }
            set
            {
                pushDailyDataFlagField = value;
                RaisePropertyChanged("pushDailyDataFlag");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pushDailyData : object, INotifyPropertyChanged
    {
        private string vendorCodeField;

        private emsData[] emsDataListField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string vendorCode
        {
            get
            {
                return vendorCodeField;
            }
            set
            {
                vendorCodeField = value;
                RaisePropertyChanged("vendorCode");
            }
        }

        /// <remarks/>
        [XmlElement("emsDataList", Form = XmlSchemaForm.Unqualified, Order = 1)]
        public emsData[] emsDataList
        {
            get
            {
                return emsDataListField;
            }
            set
            {
                emsDataListField = value;
                RaisePropertyChanged("emsDataList");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pushHourlyDataResponse : object, INotifyPropertyChanged
    {
        private resultData pushHourlyDataFlagField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public resultData pushHourlyDataFlag
        {
            get
            {
                return pushHourlyDataFlagField;
            }
            set
            {
                pushHourlyDataFlagField = value;
                RaisePropertyChanged("pushHourlyDataFlag");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pushHourlyData : object, INotifyPropertyChanged
    {
        private string vendorCodeField;

        private emsData[] emsDataListField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string vendorCode
        {
            get
            {
                return vendorCodeField;
            }
            set
            {
                vendorCodeField = value;
                RaisePropertyChanged("vendorCode");
            }
        }

        /// <remarks/>
        [XmlElement("emsDataList", Form = XmlSchemaForm.Unqualified, Order = 1)]
        public emsData[] emsDataList
        {
            get
            {
                return emsDataListField;
            }
            set
            {
                emsDataListField = value;
                RaisePropertyChanged("emsDataList");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pushDevicesResponse : object, INotifyPropertyChanged
    {
        private resultData deviceCodesField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public resultData deviceCodes
        {
            get
            {
                return deviceCodesField;
            }
            set
            {
                deviceCodesField = value;
                RaisePropertyChanged("deviceCodes");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pushDevices : object, INotifyPropertyChanged
    {
        private string vendorCodeField;

        private emsDevice[] emsDeviceListField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string vendorCode
        {
            get
            {
                return vendorCodeField;
            }
            set
            {
                vendorCodeField = value;
                RaisePropertyChanged("vendorCode");
            }
        }

        /// <remarks/>
        [XmlElement("emsDeviceList", Form = XmlSchemaForm.Unqualified, Order = 1)]
        public emsDevice[] emsDeviceList
        {
            get
            {
                return emsDeviceListField;
            }
            set
            {
                emsDeviceListField = value;
                RaisePropertyChanged("emsDeviceList");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pullProjectPeriod : object, INotifyPropertyChanged
    {
        private string vendorCodeField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string vendorCode
        {
            get
            {
                return vendorCodeField;
            }
            set
            {
                vendorCodeField = value;
                RaisePropertyChanged("vendorCode");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pullProjectType : object, INotifyPropertyChanged
    {
        private string vendorCodeField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string vendorCode
        {
            get
            {
                return vendorCodeField;
            }
            set
            {
                vendorCodeField = value;
                RaisePropertyChanged("vendorCode");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class pullProjectCategory : object, INotifyPropertyChanged
    {
        private string vendorCodeField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public string vendorCode
        {
            get
            {
                return vendorCodeField;
            }
            set
            {
                vendorCodeField = value;
                RaisePropertyChanged("vendorCode");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class emsPrjPeriod : object, INotifyPropertyChanged
    {
        private int codeField;

        private bool codeFieldSpecified;

        private string nameField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public int code
        {
            get
            {
                return codeField;
            }
            set
            {
                codeField = value;
                RaisePropertyChanged("code");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool codeSpecified
        {
            get
            {
                return codeFieldSpecified;
            }
            set
            {
                codeFieldSpecified = value;
                RaisePropertyChanged("codeSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 1)]
        public string name
        {
            get
            {
                return nameField;
            }
            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "4.6.1586.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://resource.ems.ks/")]
    public class emsPrjType : object, INotifyPropertyChanged
    {
        private int codeField;

        private bool codeFieldSpecified;

        private string nameField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 0)]
        public int code
        {
            get
            {
                return codeField;
            }
            set
            {
                codeField = value;
                RaisePropertyChanged("code");
            }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool codeSpecified
        {
            get
            {
                return codeFieldSpecified;
            }
            set
            {
                codeFieldSpecified = value;
                RaisePropertyChanged("codeSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified, Order = 1)]
        public string name
        {
            get
            {
                return nameField;
            }
            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            propertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pullProjectCategory", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pullProjectCategory1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string vendorCode;

        public pullProjectCategory1()
        {
        }

        public pullProjectCategory1(string vendorCode)
        {
            this.vendorCode = vendorCode;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pullProjectCategoryResponse", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pullProjectCategoryResponse
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement("pullProjectCategoryFlag", Form = XmlSchemaForm.Unqualified)]
        public emsPrjCategory[] pullProjectCategoryFlag;

        public pullProjectCategoryResponse()
        {
        }

        public pullProjectCategoryResponse(emsPrjCategory[] pullProjectCategoryFlag)
        {
            this.pullProjectCategoryFlag = pullProjectCategoryFlag;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pullProjectType", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pullProjectType1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string vendorCode;

        public pullProjectType1()
        {
        }

        public pullProjectType1(string vendorCode)
        {
            this.vendorCode = vendorCode;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pullProjectTypeResponse", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pullProjectTypeResponse
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement("pullProjectTypeFlag", Form = XmlSchemaForm.Unqualified)]
        public emsPrjType[] pullProjectTypeFlag;

        public pullProjectTypeResponse()
        {
        }

        public pullProjectTypeResponse(emsPrjType[] pullProjectTypeFlag)
        {
            this.pullProjectTypeFlag = pullProjectTypeFlag;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pullProjectPeriod", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pullProjectPeriod1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string vendorCode;

        public pullProjectPeriod1()
        {
        }

        public pullProjectPeriod1(string vendorCode)
        {
            this.vendorCode = vendorCode;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pullProjectPeriodResponse", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pullProjectPeriodResponse
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement("pullProjectPeriodFlag", Form = XmlSchemaForm.Unqualified)]
        public emsPrjPeriod[] pullProjectPeriodFlag;

        public pullProjectPeriodResponse()
        {
        }

        public pullProjectPeriodResponse(emsPrjPeriod[] pullProjectPeriodFlag)
        {
            this.pullProjectPeriodFlag = pullProjectPeriodFlag;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pushDevices", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pushDevices1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string vendorCode;

        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 1)]
        [XmlElement("emsDeviceList", Form = XmlSchemaForm.Unqualified)]
        public emsDevice[] emsDeviceList;

        public pushDevices1()
        {
        }

        public pushDevices1(string vendorCode, emsDevice[] emsDeviceList)
        {
            this.vendorCode = vendorCode;
            this.emsDeviceList = emsDeviceList;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pushDevicesResponse", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pushDevicesResponse1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public resultData deviceCodes;

        public pushDevicesResponse1()
        {
        }

        public pushDevicesResponse1(resultData deviceCodes)
        {
            this.deviceCodes = deviceCodes;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pushHourlyData", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pushHourlyData1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string vendorCode;

        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 1)]
        [XmlElement("emsDataList", Form = XmlSchemaForm.Unqualified)]
        public emsData[] emsDataList;

        public pushHourlyData1()
        {
        }

        public pushHourlyData1(string vendorCode, emsData[] emsDataList)
        {
            this.vendorCode = vendorCode;
            this.emsDataList = emsDataList;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pushHourlyDataResponse", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pushHourlyDataResponse1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public resultData pushHourlyDataFlag;

        public pushHourlyDataResponse1()
        {
        }

        public pushHourlyDataResponse1(resultData pushHourlyDataFlag)
        {
            this.pushHourlyDataFlag = pushHourlyDataFlag;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pushDailyData", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pushDailyData1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string vendorCode;

        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 1)]
        [XmlElement("emsDataList", Form = XmlSchemaForm.Unqualified)]
        public emsData[] emsDataList;

        public pushDailyData1()
        {
        }

        public pushDailyData1(string vendorCode, emsData[] emsDataList)
        {
            this.vendorCode = vendorCode;
            this.emsDataList = emsDataList;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pushDailyDataResponse", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pushDailyDataResponse1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public resultData pushDailyDataFlag;

        public pushDailyDataResponse1()
        {
        }

        public pushDailyDataResponse1(resultData pushDailyDataFlag)
        {
            this.pushDailyDataFlag = pushDailyDataFlag;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pushRealTimeData", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pushRealTimeData1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string vendorCode;

        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 1)]
        [XmlElement("emsDataList", Form = XmlSchemaForm.Unqualified)]
        public emsData[] emsDataList;

        public pushRealTimeData1()
        {
        }

        public pushRealTimeData1(string vendorCode, emsData[] emsDataList)
        {
            this.vendorCode = vendorCode;
            this.emsDataList = emsDataList;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pushRealTimeDataResponse", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pushRealTimeDataResponse1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public resultData pushRealTimeDataFlag;

        public pushRealTimeDataResponse1()
        {
        }

        public pushRealTimeDataResponse1(resultData pushRealTimeDataFlag)
        {
            this.pushRealTimeDataFlag = pushRealTimeDataFlag;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pushDeviceStatus", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pushDeviceStatus1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string vendorCode;

        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 1)]
        [XmlElement("emsDeviceList", Form = XmlSchemaForm.Unqualified)]
        public emsDevice[] emsDeviceList;

        public pushDeviceStatus1()
        {
        }

        public pushDeviceStatus1(string vendorCode, emsDevice[] emsDeviceList)
        {
            this.vendorCode = vendorCode;
            this.emsDeviceList = emsDeviceList;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pushDeviceStatusResponse", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pushDeviceStatusResponse1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public resultData deviceStatusCodes;

        public pushDeviceStatusResponse1()
        {
        }

        public pushDeviceStatusResponse1(resultData deviceStatusCodes)
        {
            this.deviceStatusCodes = deviceStatusCodes;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pullRegion", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pullRegion1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string vendorCode;

        public pullRegion1()
        {
        }

        public pullRegion1(string vendorCode)
        {
            this.vendorCode = vendorCode;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pullRegionResponse", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pullRegionResponse
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement("pullRegionFlag", Form = XmlSchemaForm.Unqualified)]
        public emsRegion[] pullRegionFlag;

        public pullRegionResponse()
        {
        }

        public pullRegionResponse(emsRegion[] pullRegionFlag)
        {
            this.pullRegionFlag = pullRegionFlag;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pushProjects", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pushProjects1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string vendorCode;

        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 1)]
        [XmlElement("emsProjectList", Form = XmlSchemaForm.Unqualified)]
        public emsProject[] emsProjectList;

        public pushProjects1()
        {
        }

        public pushProjects1(string vendorCode, emsProject[] emsProjectList)
        {
            this.vendorCode = vendorCode;
            this.emsProjectList = emsProjectList;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pushProjectsResponse", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pushProjectsResponse1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public resultData projectCodes;

        public pushProjectsResponse1()
        {
        }

        public pushProjectsResponse1(resultData projectCodes)
        {
            this.projectCodes = projectCodes;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pushProjectStatus", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pushProjectStatus1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string vendorCode;

        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 1)]
        [XmlElement("emsProjectList", Form = XmlSchemaForm.Unqualified)]
        public emsProject[] emsProjectList;

        public pushProjectStatus1()
        {
        }

        public pushProjectStatus1(string vendorCode, emsProject[] emsProjectList)
        {
            this.vendorCode = vendorCode;
            this.emsProjectList = emsProjectList;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pushProjectStatusResponse", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pushProjectStatusResponse1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public resultData projectStatusCodes;

        public pushProjectStatusResponse1()
        {
        }

        public pushProjectStatusResponse1(resultData projectStatusCodes)
        {
            this.projectStatusCodes = projectStatusCodes;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "registerVendor", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class registerVendor1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string vendorName;

        public registerVendor1()
        {
        }

        public registerVendor1(string vendorName)
        {
            this.vendorName = vendorName;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "registerVendorResponse", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class registerVendorResponse1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string vendorCode;

        public registerVendorResponse1()
        {
        }

        public registerVendorResponse1(string vendorCode)
        {
            this.vendorCode = vendorCode;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pullDistrict", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pullDistrict1
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string vendorCode;

        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 1)]
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string parentDistrict;

        public pullDistrict1()
        {
        }

        public pullDistrict1(string vendorCode, string parentDistrict)
        {
            this.vendorCode = vendorCode;
            this.parentDistrict = parentDistrict;
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(WrapperName = "pullDistrictResponse", WrapperNamespace = "http://resource.ems.ks/", IsWrapped = true)]
    public class pullDistrictResponse
    {
        [MessageBodyMember(Namespace = "http://resource.ems.ks/", Order = 0)]
        [XmlElement("districts", Form = XmlSchemaForm.Unqualified)]
        public emsDistrict[] districts;

        public pullDistrictResponse()
        {
        }

        public pullDistrictResponse(emsDistrict[] districts)
        {
            this.districts = districts;
        }
    }

    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface PushResourceServiceChannel : IPushResourceService, IClientChannel
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public class PushResourceServiceClient : ClientBase<IPushResourceService>, IPushResourceService
    {
        public PushResourceServiceClient()
        {
        }

        public PushResourceServiceClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public PushResourceServiceClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public PushResourceServiceClient(string endpointConfigurationName, EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public PushResourceServiceClient(System.ServiceModel.Channels.Binding binding, EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        pullProjectCategoryResponse IPushResourceService.pullProjectCategory(pullProjectCategory1 request)
        {
            return Channel.pullProjectCategory(request);
        }

        public emsPrjCategory[] pullProjectCategory(string vendorCode)
        {
            var inValue = new pullProjectCategory1 {vendorCode = vendorCode};
            var retVal = ((IPushResourceService)(this)).pullProjectCategory(inValue);
            return retVal.pullProjectCategoryFlag;
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<pullProjectCategoryResponse> IPushResourceService.pullProjectCategoryAsync(pullProjectCategory1 request)
        {
            return Channel.pullProjectCategoryAsync(request);
        }

        public Task<pullProjectCategoryResponse> pullProjectCategoryAsync(string vendorCode)
        {
            var inValue = new pullProjectCategory1 {vendorCode = vendorCode};
            return ((IPushResourceService)(this)).pullProjectCategoryAsync(inValue);
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        pullProjectTypeResponse IPushResourceService.pullProjectType(pullProjectType1 request)
        {
            return Channel.pullProjectType(request);
        }

        public emsPrjType[] pullProjectType(string vendorCode)
        {
            var inValue = new pullProjectType1 {vendorCode = vendorCode};
            var retVal = ((IPushResourceService)(this)).pullProjectType(inValue);
            return retVal.pullProjectTypeFlag;
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<pullProjectTypeResponse> IPushResourceService.pullProjectTypeAsync(pullProjectType1 request)
        {
            return Channel.pullProjectTypeAsync(request);
        }

        public Task<pullProjectTypeResponse> pullProjectTypeAsync(string vendorCode)
        {
            var inValue = new pullProjectType1 {vendorCode = vendorCode};
            return ((IPushResourceService)(this)).pullProjectTypeAsync(inValue);
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        pullProjectPeriodResponse IPushResourceService.pullProjectPeriod(pullProjectPeriod1 request)
        {
            return Channel.pullProjectPeriod(request);
        }

        public emsPrjPeriod[] pullProjectPeriod(string vendorCode)
        {
            var inValue = new pullProjectPeriod1 {vendorCode = vendorCode};
            var retVal = ((IPushResourceService)(this)).pullProjectPeriod(inValue);
            return retVal.pullProjectPeriodFlag;
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<pullProjectPeriodResponse> IPushResourceService.pullProjectPeriodAsync(pullProjectPeriod1 request)
        {
            return Channel.pullProjectPeriodAsync(request);
        }

        public Task<pullProjectPeriodResponse> pullProjectPeriodAsync(string vendorCode)
        {
            var inValue = new pullProjectPeriod1 {vendorCode = vendorCode};
            return ((IPushResourceService)(this)).pullProjectPeriodAsync(inValue);
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        pushDevicesResponse1 IPushResourceService.pushDevices(pushDevices1 request)
        {
            return Channel.pushDevices(request);
        }

        public resultData pushDevices(string vendorCode, emsDevice[] emsDeviceList)
        {
            var inValue = new pushDevices1
            {
                vendorCode = vendorCode,
                emsDeviceList = emsDeviceList
            };
            var retVal = ((IPushResourceService)(this)).pushDevices(inValue);
            return retVal.deviceCodes;
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<pushDevicesResponse1> IPushResourceService.pushDevicesAsync(pushDevices1 request)
        {
            return Channel.pushDevicesAsync(request);
        }

        public Task<pushDevicesResponse1> pushDevicesAsync(string vendorCode, emsDevice[] emsDeviceList)
        {
            var inValue = new pushDevices1
            {
                vendorCode = vendorCode,
                emsDeviceList = emsDeviceList
            };
            return ((IPushResourceService)(this)).pushDevicesAsync(inValue);
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        pushHourlyDataResponse1 IPushResourceService.pushHourlyData(pushHourlyData1 request)
        {
            return Channel.pushHourlyData(request);
        }

        public resultData pushHourlyData(string vendorCode, emsData[] emsDataList)
        {
            var inValue = new pushHourlyData1
            {
                vendorCode = vendorCode,
                emsDataList = emsDataList
            };
            var retVal = ((IPushResourceService)(this)).pushHourlyData(inValue);
            return retVal.pushHourlyDataFlag;
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<pushHourlyDataResponse1> IPushResourceService.pushHourlyDataAsync(pushHourlyData1 request)
        {
            return Channel.pushHourlyDataAsync(request);
        }

        public Task<pushHourlyDataResponse1> pushHourlyDataAsync(string vendorCode, emsData[] emsDataList)
        {
            var inValue = new pushHourlyData1
            {
                vendorCode = vendorCode,
                emsDataList = emsDataList
            };
            return ((IPushResourceService)(this)).pushHourlyDataAsync(inValue);
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        pushDailyDataResponse1 IPushResourceService.pushDailyData(pushDailyData1 request)
        {
            return Channel.pushDailyData(request);
        }

        public resultData pushDailyData(string vendorCode, emsData[] emsDataList)
        {
            var inValue = new pushDailyData1
            {
                vendorCode = vendorCode,
                emsDataList = emsDataList
            };
            var retVal = ((IPushResourceService)(this)).pushDailyData(inValue);
            return retVal.pushDailyDataFlag;
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<pushDailyDataResponse1> IPushResourceService.pushDailyDataAsync(pushDailyData1 request)
        {
            return Channel.pushDailyDataAsync(request);
        }

        public Task<pushDailyDataResponse1> pushDailyDataAsync(string vendorCode, emsData[] emsDataList)
        {
            var inValue = new pushDailyData1
            {
                vendorCode = vendorCode,
                emsDataList = emsDataList
            };
            return ((IPushResourceService)(this)).pushDailyDataAsync(inValue);
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        pushRealTimeDataResponse1 IPushResourceService.pushRealTimeData(pushRealTimeData1 request)
        {
            return Channel.pushRealTimeData(request);
        }

        public resultData pushRealTimeData(string vendorCode, emsData[] emsDataList)
        {
            var inValue = new pushRealTimeData1
            {
                vendorCode = vendorCode,
                emsDataList = emsDataList
            };
            var retVal = ((IPushResourceService)(this)).pushRealTimeData(inValue);
            return retVal.pushRealTimeDataFlag;
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<pushRealTimeDataResponse1> IPushResourceService.pushRealTimeDataAsync(pushRealTimeData1 request)
        {
            return Channel.pushRealTimeDataAsync(request);
        }

        public Task<pushRealTimeDataResponse1> pushRealTimeDataAsync(string vendorCode, emsData[] emsDataList)
        {
            var inValue = new pushRealTimeData1
            {
                vendorCode = vendorCode,
                emsDataList = emsDataList
            };
            return ((IPushResourceService)(this)).pushRealTimeDataAsync(inValue);
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        pushDeviceStatusResponse1 IPushResourceService.pushDeviceStatus(pushDeviceStatus1 request)
        {
            return Channel.pushDeviceStatus(request);
        }

        public resultData pushDeviceStatus(string vendorCode, emsDevice[] emsDeviceList)
        {
            var inValue = new pushDeviceStatus1
            {
                vendorCode = vendorCode,
                emsDeviceList = emsDeviceList
            };
            var retVal = ((IPushResourceService)(this)).pushDeviceStatus(inValue);
            return retVal.deviceStatusCodes;
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<pushDeviceStatusResponse1> IPushResourceService.pushDeviceStatusAsync(pushDeviceStatus1 request)
        {
            return Channel.pushDeviceStatusAsync(request);
        }

        public Task<pushDeviceStatusResponse1> pushDeviceStatusAsync(string vendorCode, emsDevice[] emsDeviceList)
        {
            var inValue = new pushDeviceStatus1
            {
                vendorCode = vendorCode,
                emsDeviceList = emsDeviceList
            };
            return ((IPushResourceService)(this)).pushDeviceStatusAsync(inValue);
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        pullRegionResponse IPushResourceService.pullRegion(pullRegion1 request)
        {
            return Channel.pullRegion(request);
        }

        public emsRegion[] pullRegion(string vendorCode)
        {
            var inValue = new pullRegion1 {vendorCode = vendorCode};
            var retVal = ((IPushResourceService)(this)).pullRegion(inValue);
            return retVal.pullRegionFlag;
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<pullRegionResponse> IPushResourceService.pullRegionAsync(pullRegion1 request)
        {
            return Channel.pullRegionAsync(request);
        }

        public Task<pullRegionResponse> pullRegionAsync(string vendorCode)
        {
            var inValue = new pullRegion1 {vendorCode = vendorCode};
            return ((IPushResourceService)(this)).pullRegionAsync(inValue);
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        pushProjectsResponse1 IPushResourceService.pushProjects(pushProjects1 request)
        {
            return Channel.pushProjects(request);
        }

        public resultData pushProjects(string vendorCode, emsProject[] emsProjectList)
        {
            var inValue = new pushProjects1
            {
                vendorCode = vendorCode,
                emsProjectList = emsProjectList
            };
            var retVal = ((IPushResourceService)(this)).pushProjects(inValue);
            return retVal.projectCodes;
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<pushProjectsResponse1> IPushResourceService.pushProjectsAsync(pushProjects1 request)
        {
            return Channel.pushProjectsAsync(request);
        }

        public Task<pushProjectsResponse1> pushProjectsAsync(string vendorCode, emsProject[] emsProjectList)
        {
            var inValue = new pushProjects1
            {
                vendorCode = vendorCode,
                emsProjectList = emsProjectList
            };
            return ((IPushResourceService)(this)).pushProjectsAsync(inValue);
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        pushProjectStatusResponse1 IPushResourceService.pushProjectStatus(pushProjectStatus1 request)
        {
            return Channel.pushProjectStatus(request);
        }

        public resultData pushProjectStatus(string vendorCode, emsProject[] emsProjectList)
        {
            var inValue = new pushProjectStatus1
            {
                vendorCode = vendorCode,
                emsProjectList = emsProjectList
            };
            var retVal = ((IPushResourceService)(this)).pushProjectStatus(inValue);
            return retVal.projectStatusCodes;
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<pushProjectStatusResponse1> IPushResourceService.pushProjectStatusAsync(pushProjectStatus1 request)
        {
            return Channel.pushProjectStatusAsync(request);
        }

        public Task<pushProjectStatusResponse1> pushProjectStatusAsync(string vendorCode, emsProject[] emsProjectList)
        {
            var inValue = new pushProjectStatus1
            {
                vendorCode = vendorCode,
                emsProjectList = emsProjectList
            };
            return ((IPushResourceService)(this)).pushProjectStatusAsync(inValue);
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        registerVendorResponse1 IPushResourceService.registerVendor(registerVendor1 request)
        {
            return Channel.registerVendor(request);
        }

        public string registerVendor(string vendorName)
        {
            var inValue = new registerVendor1 {vendorName = vendorName};
            var retVal = ((IPushResourceService)(this)).registerVendor(inValue);
            return retVal.vendorCode;
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<registerVendorResponse1> IPushResourceService.registerVendorAsync(registerVendor1 request)
        {
            return Channel.registerVendorAsync(request);
        }

        public Task<registerVendorResponse1> registerVendorAsync(string vendorName)
        {
            var inValue = new registerVendor1 {vendorName = vendorName};
            return ((IPushResourceService)(this)).registerVendorAsync(inValue);
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        pullDistrictResponse IPushResourceService.pullDistrict(pullDistrict1 request)
        {
            return Channel.pullDistrict(request);
        }

        public emsDistrict[] pullDistrict(string vendorCode, string parentDistrict)
        {
            var inValue = new pullDistrict1
            {
                vendorCode = vendorCode,
                parentDistrict = parentDistrict
            };
            var retVal = ((IPushResourceService)(this)).pullDistrict(inValue);
            return retVal.districts;
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<pullDistrictResponse> IPushResourceService.pullDistrictAsync(pullDistrict1 request)
        {
            return Channel.pullDistrictAsync(request);
        }

        public Task<pullDistrictResponse> pullDistrictAsync(string vendorCode, string parentDistrict)
        {
            var inValue = new pullDistrict1
            {
                vendorCode = vendorCode,
                parentDistrict = parentDistrict
            };
            return ((IPushResourceService)(this)).pullDistrictAsync(inValue);
        }
    }
}